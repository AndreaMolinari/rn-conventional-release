name: Release new Alpha version

on:
  pull_request:
    types:
      - closed

  workflow_dispatch:
    inputs:
      type_release:
        description: Chose release type
        type: choice
        default: "alpha"
        options:
          - "aplha"
          - "beta"
          - "rc"
          - "new release"
      first_release:
        description: Is a First Release
        type: boolean
      pre_release_github:
        description: Is a pre-release for GitHub
        type: boolean
        default: false
      draft:
        description: Is a Draft Release
        type: boolean
        default: false
      release_as:
        description: Release As
        type: string

permissions: write-all

jobs:
  release-myself:
    runs-on: ubuntu-latest

    steps:
      - if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        id: auto-release-type
        name: Verifica azione da compiere
        run: |
          prefixes=("feat" "fix")

          for prefix in "${prefixes[@]}"; do
              if [[ "${{ github.head_ref }}" == "$prefix-"* ]]; then
                  echo "must-run=true" >> $GITHUB_OUTPUT
                  echo "is-alpha=true" >> $GITHUB_OUTPUT
                  break
              fi
          done

          branches=("develop")

          for branch in "${branches[@]}"; do
              if [[ "${{ github.base_ref }}" == "$branch" ]]; then
                  echo "must-run=true" >> $GITHUB_OUTPUT
                  echo "is-beta=true" >> $GITHUB_OUTPUT
                  break
              fi
          done

      - if: github.event_name != 'pull_request'
        run: echo "must-run=true" >> $GITHUB_OUTPUT
          
      - if: steps.auto-release-type.outputs.must-run == true
        uses: actions/Checkout@v4

      - if: steps.auto-release-type.outputs.must-run == true
        uses: actions/setup-node@v3
      
      - if: steps.auto-release-type.outputs.must-run == true && github.event_name != 'pull_request'
        uses: ./../rn-conventional-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          first-release: ${{ inputs.first_release }}
          pre-release-name: ${{ inputs.type_release }}
          pre-release-github: ${{ inputs.pre_release_github }}
          draft: ${{ inputs.draft }}
          release-as: ${{ inputs.release_as }}
      
      - if: steps.auto-release-type.outputs.is-alpha == 'true'
        uses: ./../rn-conventional-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          first-release: ${{ inputs.first_release }}
          pre-release-name: ${{ github.head_ref }}
          pre-release-github: true
          draft: ${{ inputs.draft }}
          release-as: ${{ inputs.release_as }}
      
      - if: steps.auto-release-type.outputs.is-beta == 'true'
        uses: ./../rn-conventional-release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          first-release: ${{ inputs.first_release }}
          pre-release-name: beta
          pre-release-github: true
          draft: ${{ inputs.draft }}
          release-as: ${{ inputs.release_as }}
